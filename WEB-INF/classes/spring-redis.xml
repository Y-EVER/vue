<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数, 默认8个 -->
		<property name="maxTotal" value="5000" />
		<!-- 最大空闲连接数, 默认0 -->
		<property name="maxIdle" value="500" />
		<!-- 最小空闲连接数, 默认0 -->
		<property name="minIdle" value="10" />
		<!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1 -->
		<property name="maxWaitMillis" value="12000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="false" />
		<!-- 在return给pool时，是否提前进行validate操作 -->
		<property name="testOnReturn" value="false" />
		<!--在空闲时检查有效性, 默认false  -->
		<property name="testWhileIdle" value="true" />
		<!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟)  -->
		<property name="minEvictableIdleTimeMillis" value="3600000"></property>
		<!--逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1  -->
		<property name="timeBetweenEvictionRunsMillis"  value="1800000"></property>
	</bean>
	<context:annotation-config />
	<bean id="redisHttpSessionConfiguration"
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="hostName" value="192.168.1.189" />
		<property name="password" value="123456"/>
		<property name="port" value="6379" />
		<property name="timeout" value="120000" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	
	<bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	 <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" /> 
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="stringRedisSerializer"/>
    </bean>
      
</beans>
